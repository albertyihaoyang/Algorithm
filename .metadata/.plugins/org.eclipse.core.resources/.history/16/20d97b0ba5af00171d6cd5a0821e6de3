package com.yyh;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class ConcatenatedWords {
	public static void main(String[] args){
		// Use String array to store the result:["1st CW", "2nd CW", TotalNum]
		String[] res = new String[3];
		// Read words from the file into List
		List<String> dict = new ArrayList<>();
		try {
			File file = new File("wordsforproblem.txt");
			FileReader fileReader = new FileReader(file);
			BufferedReader bufferedReader = new BufferedReader(fileReader);
			String line;
			while ((line = bufferedReader.readLine()) != null) {
				dict.add(line);
			}
			fileReader.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		dict.sort(new Comparator<String>() {
			public int compare (String s1, String s2) {
				if (s1.length() == s2.length()){
					return 0;
				}
				return s1.length() < s2.length() ? -1 : 1;
			}
		});
		concatenatedWords(dict, res);
		System.out.println(res[0] + res[1] + res[2]);
	}
	public static void concatenatedWords(List<String> dict, String[] res) {
		List<String> result = new ArrayList<>();
		Set<String> preWords = new HashSet<>();
		

		for (int i = 0; i < words.length; i++) {
			if (canForm(words[i], preWords)) {
				result.add(words[i]);
			}
			preWords.add(words[i]);
		}

		return result;
	}

	private static boolean canForm(String word, Set<String> dict) {
		if (dict.isEmpty()) return false;
		boolean[] dp = new boolean[word.length() + 1];
		dp[0] = true;
		for (int i = 1; i <= word.length(); i++) {
			for (int j = 0; j < i; j++) {
				if (!dp[j]) continue;
				if (dict.contains(word.substring(j, i))) {
					dp[i] = true;
					break;
				}
			}
		}
		return dp[word.length()];
	}
}

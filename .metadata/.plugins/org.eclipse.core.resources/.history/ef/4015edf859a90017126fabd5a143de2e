package com.yyh;

import java.util.List;
import java.util.PriorityQueue;

// Given three arrays sorted in ascending order. Pull one number from each array to form a coordinate <x,y,z> in a 3D space. 
// Find the coordinates of the points that is k-th closest to <0,0,0>.

class Node{
	int x;
	int y;
	int z;
	int dis;
	
	public Node(int x, int y, int z){
		this.x = x;
		this.y = y;
		this.z = z;
		dis = x * x + y * y + z * z;
	}
}
public class Closest {
	public List<Integer> closest(int[] a, int[] b, int[] c, int k) {
		boolean[][][] visited = new boolean[a.length][b.length][c.length];
		PriorityQueue<Node> minHeap = new PriorityQueue<>(k, new Comparator<Node>{
			@Override
			public int compare(Node n1, Node n2){
				if (n1.dis == n2.dis){
					return 0;
				}
				return n1.dis < n2.dis ? -1: 1;
			}
		});
	}
	
}

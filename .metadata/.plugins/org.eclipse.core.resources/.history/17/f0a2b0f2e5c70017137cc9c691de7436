package com.yyh;

import java.util.HashMap;

// Given n points on a 2D plane, find the maximum number of points that lie on the same straight line.
class Point {
	int x;
	int y;
	Point() { x = 0; y = 0; }
	Point(int a, int b) { 
		x = a; 
		y = b; 
	}
}

public class Solution {
	public int maxPoints(Point[] points) {
		if (points.length <= 2) return points.length;
		int result = 0;
		for (int i = 0; i < points.length; i++){
			HashMap<Double, Integer> map = new HashMap<>();
			int samex = 1;
			int samep = 0;
			for (int j = 0; j < points.length; j++){
				if (j != i){
					if ((points[j].x == points[i].x) && (points[j].y == points[i].y)){
						samep++;
					}
					if (points[j].x == points[i].x){
						samex++;
						continue;
					}
					double k = (double)(points[j].y - points[i].y) / (double)(points[j].x - points[i].x);
					map.put(k, map.getOrDefault(k, 1) + 1);
					result = Math.max(result, map.get(k) + samep);
				}
			}
			result = Math.max(result, samex);
		}
		return result;
	}
}
